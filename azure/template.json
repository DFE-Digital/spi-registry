{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serviceIdentifier": {
      "type": "string",
      "minLength": 4,
      "maxLength": 4
    },
    "appName": {
      "type": "string",
      "maxLength": 8
    },
    "environment": {
      "type": "string",
      "defaultValue": "d",
      "allowedValues": [ "d", "t", "p" ]
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "DEV",
      "allowedValues": [ "DEV", "TEST", "OAT", "PROD" ]
    },
    "environmentInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "appInsightsInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "vNetInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "subnetInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "eapimIp": {
      "type": "string",
      "minLength": 7,
      "maxLength": 15
    },
    "servicePlanInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    }
  },
  "variables": {
    "namePrefix": "[concat(parameters('serviceIdentifier'), parameters('environment'), parameters('environmentInstance'))]",
    "cosmosAccountName": "[concat(variables('namePrefix'), '-', parameters('appName'), '-cms-01')]",
    "cosmosDatabaseName": "[concat(variables('namePrefix'), '-', parameters('appName'), '-cdb-01')]",
    "cosmosContainerName": "registered-entities",
    "storageAccountName": "[toLower(concat(variables('namePrefix'), parameters('appName')))]",
    "storageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "functionAppName": "[concat(variables('namePrefix'), '-', parameters('appName'), '-fa-01')]",
    "functionAppId": "[concat(resourceGroup().id,'/providers/','Microsoft.Web/sites/', variables('functionAppName'))]",
    "appInsightsName": "[concat(variables('namePrefix'), '-ai-', parameters('appInsightsInstance'))]",
    "sharedResourceGroupName": "[concat(variables('namePrefix'), '-shared')]",
    "servicePlanName": "[concat(variables('namePrefix'), '-shared-asp-', parameters('servicePlanInstance'))]",
    "corePrefix": "[concat(variables('namePrefix'), '-core')]",
    "vNetName": "[concat(concat(variables('corePrefix'), '-vn-'), parameters('vNetInstance'))]",
    "subnetName": "[concat(concat(variables('corePrefix'), '-sn-'), parameters('subnetInstance'))]",
    "subnetId": "[resourceId(variables('corePrefix'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2020-04-01",
      "name": "[variables('cosmosAccountName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "defaultExperience": "Core (SQL)",
        "hidden-cosmos-mmspecial": "",
        "CosmosAccountType": "Production"
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "publicNetworkAccess": "Enabled",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "disableKeyBasedMetadataWriteAccess": false,
        "enableFreeTier": false,
        "enableAnalyticalStorage": false,
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "capabilities": [],
        "ipRules": []
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2020-04-01",
      "name": "[concat(variables('cosmosAccountName'), '/', variables('cosmosDatabaseName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosAccountName')]"
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-04-01",
      "name": "[concat(variables('cosmosAccountName'), '/', variables('cosmosDatabaseName'), '/', variables('cosmosContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDatabaseName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosContainerName')]",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/type"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "tags": {
        "environment": "[parameters('environmentName')]",
        "app": "[parameters('appName')]"
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId(variables('sharedResourceGroupName'), 'Microsoft.Web/serverfarms', variables('servicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_VNET_ROUTE_ALL",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId(variables('sharedResourceGroupName'), 'microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "SPI_Sync__QueueConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "SPI_Data__CosmosDbUri",
              "value": ""
            },
            {
              "name": "SPI_Data__CosmosDbKey",
              "value": ""
            },
            {
              "name": "SPI_Data__DatabaseName",
              "value": ""
            },
            {
              "name": "SPI_Data__ContainerName",
              "value": ""
            }
          ],
          "ipSecurityRestrictions": [
            {
              "ipAddress": "[concat(parameters('eapimIp'), '/32')]",
              "action": "Allow",
              "name": "Allow EAPIM",
              "priority": 1
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "type": "Microsoft.Web/sites/networkConfig",
          "name": "[concat(variables('functionAppName'), '/VirtualNetwork')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('functionAppName'))]"
          ],
          "properties": {
            "subnetResourceId": "[variables('subnetId')]"
          }
        }
      ],
      "tags": {
        "environment": "[parameters('environmentName')]",
        "app": "[parameters('appName')]"
      }
    }
  ],
  "outputs": {
    "functionAppKey": {
      "value": "[listkeys(concat(variables('functionAppId'), '/host/default/'),'2016-08-01').functionKeys.default]",
      "type": "string"
    }
  }
}